app.name: syfomotebehov

no.nav.security:
  jwt:
    issuer:
      selvbetjening:
        discoveryurl: ${LOGINSERVICE_IDPORTEN_DISCOVERY_URL}
        accepted_audience: ${LOGINSERVICE_IDPORTEN_AUDIENCE}
        cookiename: selvbetjening-idtoken
      intern:
        discoveryurl: <naiserator>
        accepted_audience: modiabrukerdialog-p,modiabrukerdialog-q1,veilarblogin-p,veilarblogin-q1,fpsak-frontend-p,fpsak-frontend-q1,fplos-p,fplos-q1
        cookiename: ID_token
      veileder:
        discoveryurl: <naiserator>
        accepted_audience: <naiserator>
        cookiename: isso-idtoken

logging.config: classpath:logback-spring.xml

management:
  endpoint.prometheus.enabled: true
  endpoints.web:
    base-path: /internal
    exposure.include: prometheus
    path-mapping.prometheus: /prometheus

server:
  servlet:
    context-path: /syfomotebehov

spring:
  main.banner-mode: 'off'
  jta.atomikos.datasource:
    max-pool-size: 32
    min-pool-size: 8
  kafka:
      client-id: ${app.name}-${kafka.env.name}
      properties:
        security.protocol: SASL_SSL
        sasl:
          mechanism: PLAIN
          jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${srv.username}" password="${srv.password}";
        ssl.truststore:
          location: ${javax.net.ssl.trustStore}
          password: ${javax.net.ssl.trustStorePassword}
      producer:
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
      consumer:
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        group-id: ${app.name}-${kafka.env.name}
        max-poll-records: 1
        auto-offset-reset: earliest
        enable-auto-commit: false

dev: false
